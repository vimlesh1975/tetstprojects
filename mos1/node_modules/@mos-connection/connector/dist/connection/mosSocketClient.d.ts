/// <reference types="node" />
import { EventEmitter } from 'events';
import { MosModel } from '@mos-connection/helper';
import { HandedOverQueue } from './NCSServerConnection';
export type CallBackFunction = (err: any, data: unknown) => void;
export interface QueueMessage {
    time: number;
    msg: MosModel.MosMessage;
}
export declare class MosSocketClient extends EventEmitter {
    private _host;
    private _port;
    private _autoReconnect;
    private _reconnectDelay;
    private _reconnectAttempts;
    private _debug;
    private _description;
    private _client;
    private _shouldBeConnected;
    private _connected;
    private _lastConnectionAttempt;
    private _reconnectAttempt;
    private _connectionAttemptTimer;
    private _commandTimeout;
    private _queueCallback;
    private _lingeringCallback;
    private _queueMessages;
    private _sentMessage;
    private _lingeringMessage;
    private _timedOutCommands;
    private processQueueTimeout?;
    private _disposed;
    private messageParser;
    /** */
    constructor(host: string, port: number, description: string, timeout: number, debug: boolean);
    /** */
    set autoReconnect(autoReconnect: boolean);
    /** */
    set autoReconnectInterval(autoReconnectInterval: number);
    /** */
    set autoReconnectAttempts(autoReconnectAttempts: number);
    /** */
    connect(): void;
    /** */
    disconnect(): void;
    queueCommand(message: MosModel.MosMessage, cb: CallBackFunction, time?: number): void;
    processQueue(): void;
    handOverQueue(): HandedOverQueue;
    /** */
    get host(): string;
    /** */
    get port(): number;
    /** */
    dispose(): void;
    /**
     * convenience wrapper to expose all logging calls to parent object
     */
    log(args: string | number | any): void;
    setDebug(debug: boolean): void;
    /** */
    private set connected(value);
    /** */
    private get connected();
    private _sendReply;
    /** */
    private executeCommand;
    /** */
    private _autoReconnectionAttempt;
    /** */
    private _clearConnectionAttemptTimer;
    /** */
    private _onConnected;
    /** */
    private _onData;
    private _handleMessage;
    /** */
    private _onError;
    /** */
    private _onClose;
    private _triggerQueueCleanup;
    private debugTrace;
}
//# sourceMappingURL=mosSocketClient.d.ts.map