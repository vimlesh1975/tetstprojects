"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MosReqObjList = void 0;
const MosMessage_1 = require("../MosMessage");
const XMLBuilder = require("xmlbuilder");
const Utils_1 = require("../../utils/Utils");
class MosReqObjList extends MosMessage_1.MosMessage {
    constructor(options, strict) {
        super('query', strict);
        this.options = options;
    }
    get messageXMLBlocks() {
        const xmlMosReqObjList = XMLBuilder.create('mosReqObjList');
        xmlMosReqObjList.att('username', this.options.username);
        (0, Utils_1.addTextElementInternal)(xmlMosReqObjList, 'username', this.options.username, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlMosReqObjList, 'queryID', this.options.queryID, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlMosReqObjList, 'listReturnStart', this.options.listReturnStart, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlMosReqObjList, 'listReturnEnd', this.options.listReturnEnd, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlMosReqObjList, 'generalSearch', this.options.generalSearch, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlMosReqObjList, 'mosSchema', this.options.mosSchema, undefined, this.strict);
        for (const searchGroup of this.options.searchGroups) {
            const xmlSearchGroup = XMLBuilder.create('searchGroup');
            for (const searchField of searchGroup.searchFields) {
                const attributes = {};
                Object.entries(searchField).forEach(([key, value]) => {
                    attributes[key] = value + '';
                });
                (0, Utils_1.addTextElementInternal)(xmlSearchGroup, 'searchField', '', attributes, this.strict);
            }
            xmlMosReqObjList.importDocument(xmlSearchGroup);
        }
        return xmlMosReqObjList;
    }
}
exports.MosReqObjList = MosReqObjList;
//# sourceMappingURL=mosReqObjList.js.map