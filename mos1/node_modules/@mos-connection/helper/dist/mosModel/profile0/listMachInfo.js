"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ListMachineInfo = void 0;
const MosMessage_1 = require("../MosMessage");
const XMLBuilder = require("xmlbuilder");
const Utils_1 = require("../../utils/Utils");
class ListMachineInfo extends MosMessage_1.MosMessage {
    /** */
    constructor(info, port, strict) {
        super(port, strict);
        this.info = info;
    }
    /** */
    get messageXMLBlocks() {
        const xmlListMachInfo = XMLBuilder.create('listMachInfo');
        (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'manufacturer', this.info.manufacturer, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'model', this.info.model, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'hwRev', this.info.hwRev, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'swRev', this.info.swRev, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'DOM', this.info.DOM, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'SN', this.info.SN, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'ID', this.info.ID, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'time', this.info.time, undefined, this.strict);
        if (this.info.opTime)
            (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'opTime', this.info.opTime, undefined, this.strict);
        (0, Utils_1.addTextElementInternal)(xmlListMachInfo, 'mosRev', this.info.mosRev, undefined, this.strict);
        // TODO: the supportedProfiles should be changed to an Array
        const xmlSupportedProfiles = XMLBuilder.create('supportedProfiles');
        xmlSupportedProfiles.att('deviceType', this.info.supportedProfiles.deviceType);
        // let p = addTextElement(root, 'supportedProfiles').att('deviceType', this.info.supportedProfiles.deviceType)
        for (let i = 0; i < 8; i++) {
            (0, Utils_1.addTextElementInternal)(xmlSupportedProfiles, 'mosProfile', this.info.supportedProfiles['profile' + i] ? 'YES' : 'NO', undefined, this.strict).att('number', i);
        }
        xmlListMachInfo.importDocument(xmlSupportedProfiles);
        return xmlListMachInfo;
    }
}
exports.ListMachineInfo = ListMachineInfo;
//# sourceMappingURL=listMachInfo.js.map