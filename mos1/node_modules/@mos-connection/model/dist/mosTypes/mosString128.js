"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.is = exports.stringify = exports.valueOf = exports.validate = exports.create = void 0;
function create(anyValue, strict) {
    let strValue;
    if (typeof anyValue === 'object' && anyValue) {
        if (anyValue._mosString128) {
            strValue = anyValue._mosString128;
        }
        else if (anyValue.text) {
            strValue = anyValue.text.toString();
        }
        else if (Object.keys(anyValue).length === 0) {
            // is empty?
            strValue = '';
        }
        else {
            strValue = JSON.stringify(anyValue);
        }
    }
    else {
        strValue = anyValue !== `undefined` ? String(anyValue) : '';
    }
    const mosString = { _mosString128: strValue };
    validate(mosString, strict);
    return mosString;
}
exports.create = create;
function validate(mosString128, strict) {
    if (!strict)
        return;
    if ((mosString128._mosString128 || '').length > 128)
        throw new Error('MosString128: string length is too long (' +
            mosString128._mosString128 +
            ')! (To turn ignore this error, set the strict option to false)');
}
exports.validate = validate;
function valueOf(mosString128) {
    if (typeof mosString128 === 'string')
        return mosString128; // helpful hack
    return mosString128._mosString128;
}
exports.valueOf = valueOf;
function stringify(mosString128) {
    if (typeof mosString128 === 'string')
        return mosString128; // helpful hack
    return mosString128._mosString128;
}
exports.stringify = stringify;
function is(mosString128) {
    if (typeof mosString128 !== 'object')
        return false;
    if (mosString128 === null)
        return false;
    return mosString128._mosString128 !== undefined;
}
exports.is = is;
//# sourceMappingURL=mosString128.js.map