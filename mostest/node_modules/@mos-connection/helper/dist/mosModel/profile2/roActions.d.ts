import * as XMLBuilder from 'xmlbuilder';
import { MosMessage } from '../MosMessage';
import { IMOSStoryAction, IMOSROStory, IMOSItemAction, IMOSItem, IMOSROAction, IMOSString128 } from '@mos-connection/model';
export declare abstract class MosSendMessage extends MosMessage {
    constructor(strict: boolean);
}
export declare class ROInsertStories extends MosSendMessage {
    private Action;
    private Stories;
    constructor(Action: IMOSStoryAction, Stories: Array<IMOSROStory>, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export declare class ROInsertItems extends MosSendMessage {
    private Action;
    private Items;
    constructor(Action: IMOSItemAction, Items: Array<IMOSItem>, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export declare class ROReplaceStories extends MosSendMessage {
    private Action;
    private Stories;
    constructor(Action: IMOSStoryAction, Stories: Array<IMOSROStory>, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export declare class ROReplaceItems extends MosSendMessage {
    private Action;
    private Items;
    constructor(Action: IMOSItemAction, Items: Array<IMOSItem>, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export declare class ROMoveStories extends MosSendMessage {
    private Action;
    private Stories;
    constructor(Action: IMOSStoryAction, Stories: Array<IMOSString128>, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export declare class ROMoveItems extends MosSendMessage {
    private Action;
    private Items;
    constructor(Action: IMOSItemAction, Items: Array<IMOSString128>, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export declare class RODeleteStories extends MosSendMessage {
    private Action;
    private Stories;
    constructor(Action: IMOSROAction, Stories: Array<IMOSString128>, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export declare class RODeleteItems extends MosSendMessage {
    private Action;
    private Items;
    constructor(Action: IMOSStoryAction, Items: Array<IMOSString128>, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export declare class ROSwapStories extends MosSendMessage {
    private Action;
    private StoryID0;
    private StoryID1;
    constructor(Action: IMOSROAction, StoryID0: IMOSString128, StoryID1: IMOSString128, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export declare class ROSwapItems extends MosSendMessage {
    private Action;
    private ItemID0;
    private ItemID1;
    constructor(Action: IMOSStoryAction, ItemID0: IMOSString128, ItemID1: IMOSString128, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
//# sourceMappingURL=roActions.d.ts.map