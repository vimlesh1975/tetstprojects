import { IMOSObject, IMOSString128 } from '@mos-connection/model';
import { MosMessage } from '../MosMessage';
import * as XMLBuilder from 'xmlbuilder';
export interface MosReqObjActionOptionsNew {
    object: IMOSObject;
}
export declare class MosReqObjActionNew extends MosMessage {
    private options;
    constructor(options: MosReqObjActionOptionsNew, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export interface MosReqObjActionOptionsUpdate {
    object: IMOSObject;
    objectId: IMOSString128;
}
export declare class MosReqObjActionUpdate extends MosMessage {
    private options;
    constructor(options: MosReqObjActionOptionsUpdate, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
export interface MosReqObjActionOptionsDelete {
    objectId: IMOSString128;
}
export declare class MosReqObjActionDelete extends MosMessage {
    private options;
    constructor(options: MosReqObjActionOptionsDelete, strict: boolean);
    get messageXMLBlocks(): XMLBuilder.XMLElement;
}
//# sourceMappingURL=mosReqObjAction.d.ts.map